{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\Project\\\\React\\\\ecommerce_MERN\\\\frontend\\\\src\\\\Screens\\\\ProductScreen.js\";\nimport React from 'react';\nimport { Image, ListGroup, Button, Row, Col } from \"react-bootstrap\";\nimport Rating from '../Components/Rating';\nimport products from '../products';\n\nconst ProductScreen = ({\n  match\n}) => {\n  const product = products.find(product => product._id === match.params.id);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        md: 6,\n        children: /*#__PURE__*/_jsxDEV(Image, {\n          src: product.image,\n          rounded: true,\n          fluid: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        md: 3,\n        children: /*#__PURE__*/_jsxDEV(ListGroup, {\n          variant: \"flush\",\n          children: [/*#__PURE__*/_jsxDEV(ListGroup.Item, {\n            children: /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: product.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 18,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 17,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n            children: /*#__PURE__*/_jsxDEV(Rating, {\n              value: product.rating,\n              text: `${product.numReviews} reviews`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 23,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\"Price:\", ' ', \" $\", product.price]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 28,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              children: product.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        md: 3,\n        children: /*#__PURE__*/_jsxDEV(ListGroup, {\n          children: [/*#__PURE__*/_jsxDEV(ListGroup.Item, {\n            children: product.price\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n            children: product.countInStock > 0 ? 'In Stock' : 'Out of Stock'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_c = ProductScreen;\nexport default ProductScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProductScreen\");","map":{"version":3,"sources":["D:/Project/React/ecommerce_MERN/frontend/src/Screens/ProductScreen.js"],"names":["React","Image","ListGroup","Button","Row","Col","Rating","products","ProductScreen","match","product","find","_id","params","id","image","name","rating","numReviews","price","description","countInStock"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,SAAhB,EAA2BC,MAA3B,EAAmCC,GAAnC,EAAwCC,GAAxC,QAAkD,iBAAlD;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,QAAP,MAAqB,aAArB;;AAEA,MAAMC,aAAa,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAa;AAC/B,QAAMC,OAAO,GAAGH,QAAQ,CAACI,IAAT,CAAcD,OAAO,IAAIA,OAAO,CAACE,GAAR,KAAgBH,KAAK,CAACI,MAAN,CAAaC,EAAtD,CAAhB;AAEA,sBACI;AAAA,2BACI,QAAC,GAAD;AAAA,8BACI,QAAC,GAAD;AAAK,QAAA,EAAE,EAAE,CAAT;AAAA,+BACI,QAAC,KAAD;AAAO,UAAA,GAAG,EAAEJ,OAAO,CAACK,KAApB;AAA2B,UAAA,OAAO,MAAlC;AAAmC,UAAA,KAAK;AAAxC;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ,eAII,QAAC,GAAD;AAAK,QAAA,EAAE,EAAE,CAAT;AAAA,+BACI,QAAC,SAAD;AAAW,UAAA,OAAO,EAAC,OAAnB;AAAA,kCACI,QAAC,SAAD,CAAW,IAAX;AAAA,mCACI;AAAA,wBACKL,OAAO,CAACM;AADb;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBADJ,eAMI,QAAC,SAAD,CAAW,IAAX;AAAA,mCACI,QAAC,MAAD;AACI,cAAA,KAAK,EAAEN,OAAO,CAACO,MADnB;AAEI,cAAA,IAAI,EAAG,GAAEP,OAAO,CAACQ,UAAW;AAFhC;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBANJ,eAWI,QAAC,SAAD,CAAW,IAAX;AAAA,mCACI;AAAA,mCACO,GADP,QACcR,OAAO,CAACS,KADtB;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBAXJ,eAgBI,QAAC,SAAD,CAAW,IAAX;AAAA,mCACI;AAAA,wBACKT,OAAO,CAACU;AADb;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBAhBJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAJJ,eA4BI,QAAC,GAAD;AAAK,QAAA,EAAE,EAAE,CAAT;AAAA,+BACI,QAAC,SAAD;AAAA,kCACI,QAAC,SAAD,CAAW,IAAX;AAAA,sBACKV,OAAO,CAACS;AADb;AAAA;AAAA;AAAA;AAAA,kBADJ,eAII,QAAC,SAAD,CAAW,IAAX;AAAA,sBAEQT,OAAO,CAACW,YAAR,GAAuB,CAAvB,GAA2B,UAA3B,GAAwC;AAFhD;AAAA;AAAA;AAAA;AAAA,kBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cA5BJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ,mBADJ;AA6CH,CAhDD;;KAAMb,a;AAkDN,eAAeA,aAAf","sourcesContent":["import React from 'react'\r\nimport { Image, ListGroup, Button, Row, Col} from \"react-bootstrap\";\r\nimport Rating from '../Components/Rating';\r\nimport products from '../products';\r\n\r\nconst ProductScreen = ({match}) => {\r\n    const product = products.find(product => product._id === match.params.id);\r\n\r\n    return (\r\n        <>\r\n            <Row>\r\n                <Col md={6}>\r\n                    <Image src={product.image} rounded fluid/>\r\n                </Col>\r\n                <Col md={3}>\r\n                    <ListGroup variant='flush' >\r\n                        <ListGroup.Item>\r\n                            <h3>\r\n                                {product.name}\r\n                            </h3>\r\n                        </ListGroup.Item>\r\n                        <ListGroup.Item>\r\n                            <Rating \r\n                                value={product.rating} \r\n                                text={`${product.numReviews} reviews`} />\r\n                        </ListGroup.Item>\r\n                        <ListGroup.Item>\r\n                            <span>\r\n                            Price:{' '} ${product.price}\r\n                            </span>\r\n                        </ListGroup.Item>\r\n                        <ListGroup.Item>\r\n                            <span>\r\n                                {product.description}\r\n                            </span>\r\n                        </ListGroup.Item>\r\n                    </ListGroup>\r\n                </Col>\r\n                <Col md={3}>\r\n                    <ListGroup>\r\n                        <ListGroup.Item>\r\n                            {product.price}\r\n                        </ListGroup.Item>\r\n                        <ListGroup.Item>\r\n                            {\r\n                                product.countInStock > 0 ? 'In Stock' : 'Out of Stock'\r\n                            }\r\n                        </ListGroup.Item>\r\n                    </ListGroup>\r\n                </Col>\r\n            </Row>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ProductScreen\r\n"]},"metadata":{},"sourceType":"module"}